@page "/multilingual-strings"

@* The current culture (English or Arabic) can be detected automatically or set manually *@
@using System.Globalization
@using MLSM.UI.Models
@using Microsoft.AspNetCore.Components.Forms

@* For simplicity, we will assume there's a mechanism to switch between languages *@
@{
	string currentCulture = CultureInfo.CurrentCulture.Name; // Detects the current culture
}

<h3>@(currentCulture == "en-US" ? "Manage Strings" : "إدارة السلاسل")</h3>

<table class="table">
	<thead>
		<tr>
			<th>@(currentCulture == "en-US" ? "Code" : "شفرة")</th>
			<th>
				@(currentCulture == "en-US" ? "English Text" : "النص الانجليزي")
			</th>
			<th>
				@(currentCulture == "en-US" ? "Arabic Text" : "النص العربي")
			</th>
			<th>@(currentCulture == "en-US" ? "Tags" : "العلامات")</th>
			<th>@(currentCulture == "en-US" ? "Actions" : "إجراءات")</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in multilingualStrings)
		{
			<tr>
				<th>@item.Code</th>
				<td>@item.TitleEn</td>
				<td>@item.TitleAr</td>
				<td>@item.Tags</td>
				<td>
					<button @onclick="() => EditRecord(item)" class="btn btn-primary btn-sm">@("Edit")</button>
					<button @onclick="() => DeleteRecord(item.Code)" class="btn btn-danger btn-sm">@("Delete")</button>
				</td>
			</tr>
		}
	</tbody>
</table>

<button class="btn btn-success" @onclick="ShowAddModal">@("Add New")</button>

<!-- Modal for adding/editing records -->
@if (isModalVisible)
{
	<div class="modal show" style="display:block;">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">@("Add/Edit Record")</h5>
					<button type="button" class="close" @onclick="HideModal">&times;</button>
				</div>
				<div class="modal-body">
					<EditForm Model="currentItem" OnValidSubmit="HandleValidSubmit">
						<DataAnnotationsValidator />
						<ValidationSummary />

						<div class="form-group">
							<label>@(currentCulture == "en-US" ? "English Title" : "عنوان بالإنجليزية")</label>
							<InputText class="form-control" @bind-Value="currentItem.TitleEn" />
						</div>
						<div class="form-group">
							<label>@(currentCulture == "en-US" ? "Arabic Title" : "عنوان بالعربية")</label>
							<InputText class="form-control" @bind-Value="currentItem.TitleAr" />
						</div>
						<div class="form-group">
							<label>@(currentCulture == "en-US" ? "Tags" : "العلامات")</label>
							<InputText class="form-control" @bind-Value="currentItem.Tags" />
						</div>

						<button type="submit" class="btn btn-primary">@("Save")</button>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
}

@code {
	// Static list of multilingual strings (initial data)
    private List<LangManagerActionRequestDto> multilingualStrings = new List<LangManagerActionRequestDto>
	{
        new LangManagerActionRequestDto { Code = "Hi", TitleEn = "Hello", TitleAr = "مرحباً", Tags = "greeting" },
        new LangManagerActionRequestDto { Code = "Bye", TitleEn = "Goodbye", TitleAr = "وداعاً", Tags = "farewell" }
	};

    private LangManagerActionRequestDto currentItem = new LangManagerActionRequestDto();
	private bool isModalVisible = false;

	private void ShowAddModal()
	{
        currentItem = new LangManagerActionRequestDto(); // Reset the current item for adding new
		isModalVisible = true;
	}

	private void HideModal()
	{
		isModalVisible = false;
	}

    private void EditRecord(LangManagerActionRequestDto item)
	{
		currentItem = item; // Set the item to be edited
		isModalVisible = true;
	}

	private void DeleteRecord(string code)
	{
		// Delete the record from the list
		var recordToDelete = multilingualStrings.FirstOrDefault(m => m.Code == code);
		if (recordToDelete != null)
		{
			multilingualStrings.Remove(recordToDelete);
		}
	}

	private void HandleValidSubmit()
	{
		if (string.IsNullOrEmpty(currentItem.Code))
		{
			// Add new record
			currentItem.Code = multilingualStrings.Max(m => m.Code) + 1; // Assign new ID
			multilingualStrings.Add(currentItem);
		}
		else
		{
			// Edit existing record
			var existingItem = multilingualStrings.FirstOrDefault(m => m.Code == currentItem.Code);
			if (existingItem != null)
			{
				existingItem.TitleEn = currentItem.TitleEn;
				existingItem.TitleAr = currentItem.TitleAr;
				existingItem.Tags = currentItem.Tags;
			}
		}

		HideModal(); // Close the modal
	}

}

